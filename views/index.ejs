<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title><%= title %></title>
        <link rel="stylesheet" type="text/css" href="stylesheets/style.css">
        <script type="text/x-mathjax-config">
          MathJax.Hub.Config({
            tex2jax: {
              inlineMath: [ ['$','$'] ],
              processEscapes: true
            }
          });
        </script>
    </head>
    <body>
        <div class="problem-input" id="math-display">$ $</div>
        <input class="problem-input" type="text" id="math-input" placeholder="Type math here">
        <input class="problem-input" type="button" id="send-math" value="Calculate">
        <div class="problem-input" id="math-output">$ $</div>

        <script src="javascripts/mathlex.js"></script>
        <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
        <script src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
        <script>
            $(document).ready(function () {
                // get MathJax output object
                var mjDisplayBox, mjOutBox;
                MathJax.Hub.Queue(function () {
                    mjDisplayBox = MathJax.Hub.getAllJax('math-display')[0];
                    mjOutBox = MathJax.Hub.getAllJax('math-output')[0];
                });

                // "live update" MathJax whenever a key is pressed
                $('#math-input').on('keyup', function (evt) {
                    var math = $(this).val();
                    $(this).css('color', 'black');
                    if (math.length > 0) {
                        try {
                            var tree = MathLex.parse(math),
                                latex = MathLex.render(tree, 'latex');
                            MathJax.Hub.Queue(['Text', mjDisplayBox, latex]);
                        } catch (err) {
                            $(this).css('color', 'red');
                        }
                    } else {
                        // clear display and output boxes if input is empty
                        MathJax.Hub.Queue(['Text', mjDisplayBox, '']);
                        MathJax.Hub.Queue(['Text', mjOutBox, '']);
                    }
                });

                // send output to sage server
                $('#send-math').on('click', function (evt) {
                    var math = $('#math-input').val();
                    if (math.length > 0) {
                        try {
                            var tree = MathLex.parse(math),
                                sageCode = MathLex.render(tree, 'sage');
                            $.post('http://sagecell.sagemath.org/service?callback=?',
                                    { code: 'print latex('+sageCode+')' }, function (data) {
                                // HACK: Firefox does not convert data to JSON
                                if (typeof(data) === 'string') { data = $.parseJSON(data); }
                                // AJAX success callback
                                if (data.success) {
                                    MathJax.Hub.Queue(['Text', mjOutBox, data.stdout]);
                                } else {
                                    MathJax.Hub.Queue(['Text', mjOutBox, '\\text{Sage could not understand that input}']);
                                }
                            });
                        } catch (err) {
                            MathJax.Hub.Queue(['Text', mjOutBox, '\\text{Check your syntax and try again}']);
                        }
                    }
                });
            });
        </script>
    </body>
</html>